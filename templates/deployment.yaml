kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: {{ .Values.name }}
    app.kubernetes.io/name: {{ .Values.name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: {{ .Values.name }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: {{ .Values.name }}
        app.kubernetes.io/name: {{ .Values.name }}
        app.kubernetes.io/version: {{ .Values.version }}
    spec:
      containers:
        - resources:
            limits:
              cpu: 250m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 10Mi
          terminationMessagePath: /dev/termination-log
          lifecycle:
            preStop:
              exec:
                command:
                  - sleep
                  - '5'
          name: {{ .Values.name }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: File
          image: {{ .Values.image }}
          env:
            - name: "ACCOUNT_HOST"
              value: "https://acc-demo-app-account.acc"
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 600
